<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppErr_BlendOutputInvalid" xml:space="preserve">
    <value>Unable to read output path, using project location.</value>
  </data>
  <data name="AppErr_RenderFormatIsImage" xml:space="preserve">
    <value>The render format is a {0} image.
You can render an image sequence with this tool but you will need to make a video with other SW.</value>
    <comment>0=image file format</comment>
  </data>
  <data name="AppErr_RequiredProgramsNotFound" xml:space="preserve">
    <value>One or more required program(s) were not found (Path invalid OR first time run), set the paths in the Settings window</value>
    <comment>Don't really know what this is, maybe remove?</comment>
  </data>
  <data name="AR_JoinMixdown" xml:space="preserve">
    <value>Join chunks w/ Mixdown audio</value>
  </data>
  <data name="AR_JoinOnly" xml:space="preserve">
    <value>Join chunks</value>
  </data>
  <data name="AR_NoAction" xml:space="preserve">
    <value>No extra action</value>
  </data>
  <data name="Renderer_Blender" xml:space="preserve">
    <value>Blender Renderer</value>
  </data>
  <data name="Renderer_Cycles" xml:space="preserve">
    <value>Cycles Renderer</value>
  </data>
  <data name="RM_unexpected_error" xml:space="preserve">
    <value>An unexpected error ocurred while rendering, check the output folder for a log file</value>
  </data>
  <data name="AppErr_NoInfoReceived" xml:space="preserve">
    <value>Failed to read project info, no information was received.</value>
  </data>
  <data name="AppErr_UnexpectedOutput" xml:space="preserve">
    <value>Failed to read project info. Unexpected output.</value>
  </data>
  <data name="RM_AfterRenderFailed" xml:space="preserve">
    <value>After render actions did not complete sucessfully, check output folder for a log file</value>
  </data>
  <data name="AppTitle" xml:space="preserve">
    <value>Blender Render Controller</value>
  </data>
  <data name="ChunksConcatFile" xml:space="preserve">
    <value>chunklist.txt</value>
  </data>
  <data name="AppTitleProgress" xml:space="preserve">
    <value>{0}% complete - {1}</value>
    <comment>0=porcentage, 1=AppTitle</comment>
  </data>
  <data name="Dlg_clear_output_folder" xml:space="preserve">
    <value>All existing files will be deleted!
Do you want to continue?</value>
  </data>
  <data name="Dlg_clear_recent_blends_msg" xml:space="preserve">
    <value>This will clear all files in the recent blends list, are you sure?</value>
  </data>
  <data name="Dlg_clear_recent_blends_title" xml:space="preserve">
    <value>Clear recent blends?</value>
  </data>
  <data name="Dlg_closing_app_with_work_in_progress" xml:space="preserve">
    <value>Closing now will cancel ongoing work. Close anyway?</value>
  </data>
  <data name="Dlg_concat_failed" xml:space="preserve">
    <value>Failed to concatenate chunks</value>
  </data>
  <data name="Dlg_mixdown_failed" xml:space="preserve">
    <value>Mixdown failed</value>
  </data>
  <data name="Dlg_recent_blend_not_found" xml:space="preserve">
    <value>Blend file not found, remove it from the recents list?</value>
  </data>
  <data name="Dlg_select_out_loc" xml:space="preserve">
    <value>Select output location</value>
  </data>
  <data name="Dlg_setup_req_cap" xml:space="preserve">
    <value>Setup required</value>
  </data>
  <data name="Dlg_setup_req_inst" xml:space="preserve">
    <value>Paths missing</value>
  </data>
  <data name="Dlg_stop_work" xml:space="preserve">
    <value>Cancel current task?</value>
  </data>
  <data name="Dlg_WIP" xml:space="preserve">
    <value>Work in progress</value>
  </data>
  <data name="G_error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="G_file_not_found" xml:space="preserve">
    <value>File not found</value>
  </data>
  <data name="G_goto_settings" xml:space="preserve">
    <value>Goto Settings</value>
  </data>
  <data name="G_loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="G_output_folder_not_found" xml:space="preserve">
    <value>Output folder not found.</value>
  </data>
  <data name="G_warn" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Val_end_lt_start" xml:space="preserve">
    <value>End frame cannot be equal or less then Start frame</value>
  </data>
  <data name="Val_start_gt_end" xml:space="preserve">
    <value>Start frame cannot be equal or greater then End frame</value>
  </data>
  <data name="Val_too_short" xml:space="preserve">
    <value>Project must be at least 50 frames long</value>
  </data>
  <data name="AR_Mixdown" xml:space="preserve">
    <value>Mixdown</value>
  </data>
  <data name="G_ready" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="Status_render_progress" xml:space="preserve">
    <value>Completed {0} / {1} chunks, {2} frames rendered</value>
    <comment>0=parts completed, 1=parts remaining, 2=frames rendered</comment>
  </data>
  <data name="info_time_fmt" xml:space="preserve">
    <value>{0:%h}h {0:%m}m {0:%s}s {0:%f}ms</value>
  </data>
</root>